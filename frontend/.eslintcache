[{"/home/mehdi/Desktop/cherishrecipes/frontend/src/index.js":"1","/home/mehdi/Desktop/cherishrecipes/frontend/src/store.js":"2","/home/mehdi/Desktop/cherishrecipes/frontend/src/App.js":"3","/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/recipeReducers.js":"4","/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/reviewReducers.js":"5","/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/authReducers.js":"6","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/HomePage.js":"7","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/EditRecipePage.js":"8","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/LoginPage.js":"9","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/RecipePage.js":"10","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/SearchPage.js":"11","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/SignupPage.js":"12","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/ProfilePage.js":"13","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/ConfirmEmail.js":"14","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/Footer.js":"15","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/HomeHeader.js":"16","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/Container.js":"17","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/MainHeader.js":"18","/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/recipeConstants.js":"19","/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/authConstants.js":"20","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Alert.js":"21","/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/reviewConstants.js":"22","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Meta.js":"23","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Paginate.js":"24","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Loader.js":"25","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Badge.js":"26","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/redirects/Groups.js":"27","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Recipes.js":"28","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Rating.js":"29","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/redirects/Cuisines.js":"30","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Recipe.js":"31","/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/recipeActions.js":"32","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Create.js":"33","/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/reviewActions.js":"34","/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/authActions.js":"35","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Review.js":"36","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/SkeletonReview.js":"37","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Signup.js":"38","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Login.js":"39","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/SkeletonRecipe.js":"40","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/Skeleton.js":"41","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/Shimmer.js":"42"},{"size":273,"mtime":1612645053011,"results":"43","hashOfConfig":"44"},{"size":2309,"mtime":1612642525296,"results":"45","hashOfConfig":"44"},{"size":1052,"mtime":1612647624055,"results":"46","hashOfConfig":"44"},{"size":4034,"mtime":1612642525292,"results":"47","hashOfConfig":"44"},{"size":3347,"mtime":1612642525292,"results":"48","hashOfConfig":"44"},{"size":4515,"mtime":1612642525292,"results":"49","hashOfConfig":"44"},{"size":500,"mtime":1612642525292,"results":"50","hashOfConfig":"44"},{"size":1123,"mtime":1612642525292,"results":"51","hashOfConfig":"44"},{"size":304,"mtime":1612642525292,"results":"52","hashOfConfig":"44"},{"size":11849,"mtime":1612643599300,"results":"53","hashOfConfig":"44"},{"size":5431,"mtime":1612643554634,"results":"54","hashOfConfig":"44"},{"size":348,"mtime":1612642525292,"results":"55","hashOfConfig":"44"},{"size":12412,"mtime":1612643690590,"results":"56","hashOfConfig":"44"},{"size":936,"mtime":1612642525292,"results":"57","hashOfConfig":"44"},{"size":1575,"mtime":1612642525284,"results":"58","hashOfConfig":"44"},{"size":2655,"mtime":1612642525284,"results":"59","hashOfConfig":"44"},{"size":106,"mtime":1612642525284,"results":"60","hashOfConfig":"44"},{"size":2096,"mtime":1612643756064,"results":"61","hashOfConfig":"44"},{"size":1343,"mtime":1612642525284,"results":"62","hashOfConfig":"44"},{"size":1878,"mtime":1612642525284,"results":"63","hashOfConfig":"44"},{"size":120,"mtime":1612642525284,"results":"64","hashOfConfig":"44"},{"size":1434,"mtime":1612642525284,"results":"65","hashOfConfig":"44"},{"size":510,"mtime":1612642525284,"results":"66","hashOfConfig":"44"},{"size":524,"mtime":1612642525284,"results":"67","hashOfConfig":"44"},{"size":108,"mtime":1612642525284,"results":"68","hashOfConfig":"44"},{"size":127,"mtime":1612642525284,"results":"69","hashOfConfig":"44"},{"size":777,"mtime":1612642525284,"results":"70","hashOfConfig":"44"},{"size":2312,"mtime":1612642525284,"results":"71","hashOfConfig":"44"},{"size":1118,"mtime":1612642525284,"results":"72","hashOfConfig":"44"},{"size":1220,"mtime":1612642525284,"results":"73","hashOfConfig":"44"},{"size":1752,"mtime":1612642525284,"results":"74","hashOfConfig":"44"},{"size":4873,"mtime":1612642525284,"results":"75","hashOfConfig":"44"},{"size":9022,"mtime":1612643816126,"results":"76","hashOfConfig":"44"},{"size":4495,"mtime":1612642525284,"results":"77","hashOfConfig":"44"},{"size":7124,"mtime":1612642525284,"results":"78","hashOfConfig":"44"},{"size":624,"mtime":1612642525284,"results":"79","hashOfConfig":"44"},{"size":455,"mtime":1612642525284,"results":"80","hashOfConfig":"44"},{"size":2242,"mtime":1612642525284,"results":"81","hashOfConfig":"44"},{"size":4965,"mtime":1612642525284,"results":"82","hashOfConfig":"44"},{"size":454,"mtime":1612642525284,"results":"83","hashOfConfig":"44"},{"size":146,"mtime":1612642525284,"results":"84","hashOfConfig":"44"},{"size":143,"mtime":1612642525284,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"7oqyen",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"/home/mehdi/Desktop/cherishrecipes/frontend/src/index.js",[],["185","186"],"/home/mehdi/Desktop/cherishrecipes/frontend/src/store.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/App.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/recipeReducers.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/reviewReducers.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/reducers/authReducers.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/HomePage.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/EditRecipePage.js",["187"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listRecipeDetails } from '../actions/recipeActions'\nimport Alert from '../components/complements/Alert'\nimport MainHeader from '../components/layout/MainHeader'\nimport Create from '../components/recipes/Create'\n\n// Get recipe details & pass details to create\nconst EditRecipe = ({ match, history }) => {\n\tconst recipeId = match.params.recipeId\n\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\tconst recipeDetails = useSelector((state) => state.recipeDetails)\n\tconst { error, recipe } = recipeDetails\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tif (!userInfo) {\n\t\t\thistory.push('/')\n\t\t} else {\n\t\t\tdispatch(listRecipeDetails(recipeId))\n\t\t}\n\t}, [dispatch, history, listRecipeDetails, userInfo])\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<div className='container container--tight'>\n\t\t\t\t<h2 className='primary-heading'>Edit Recipe #{recipeId} </h2>\n\t\t\t\t{error && <Alert type='danger'>{error}</Alert>}\n\t\t\t\t<Create recipe={recipe} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default EditRecipe\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/LoginPage.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/RecipePage.js",["188","189","190","191","192","193","194","195"],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { listRecipeDetails } from '../actions/recipeActions'\nimport {\n\tlistRecipeReviews,\n\tcreateReview,\n\tdeleteReview,\n\tupdateReview,\n\tgetSingleReview,\n} from '../actions/reviewActions'\nimport Meta from '../components/complements/Meta'\nimport Rating from '../components/recipes/Rating'\nimport Container from '../components/layout/Container'\nimport MainHeader from '../components/layout/MainHeader'\nimport Alert from '../components/complements/Alert'\nimport Loader from '../components/complements/Loader'\nimport { getUserDetails } from '../actions/authActions'\nimport {\n\tREVIEW_CREATE_RESET,\n\tREVIEW_DELETE_RESET,\n} from '../constants/reviewConstants'\nimport SkeletonReview from '../components/skeletons/SkeletonReview'\nimport Badge from '../components/complements/Badge'\nimport { Link } from 'react-router-dom'\n\nconst RecipePage = ({ match, location }) => {\n\tconst dispatch = useDispatch()\n\tconst redirect = location.pathname ? location.pathname : '/'\n\n\tconst recipeDetails = useSelector((state) => state.recipeDetails)\n\tconst { loading, error, recipe } = recipeDetails\n\n\t// Bring in reviews\n\tconst recipeReviews = useSelector((state) => state.recipeReviews)\n\tconst {\n\t\tloading: reviewsLoading,\n\t\terror: reviewsError,\n\t\treviews,\n\t} = recipeReviews\n\n\t// Review create state\n\tconst reviewCreate = useSelector((state) => state.reviewCreate)\n\tconst { success, loading: createLoading, error: createError } = reviewCreate\n\n\t// Review delete status\n\tconst reviewDelete = useSelector((state) => state.reviewDelete)\n\tconst { success: deleteSuccess } = reviewDelete\n\n\t// Handle review update\n\t// Get single review\n\tconst singleReview = useSelector((state) => state.singleReview)\n\tconst { loading: reviewLoading, error: reviewError, review } = singleReview\n\n\tconst [reviewId, setReviewId] = useState(null)\n\tconst handleUpdate = (revId) => {\n\t\tsetReviewId(revId)\n\t\tdispatch(getSingleReview(revId))\n\t\tsetUpdateState(true)\n\t}\n\n\t// Bring in update review state\n\tconst reviewUpdate = useSelector((state) => state.reviewUpdate)\n\tconst {\n\t\tloading: updateLoading,\n\t\terror: updateError,\n\t\tsuccess: updateSuccess,\n\t} = reviewUpdate\n\n\t// Handle review creation\n\tconst [title, setTitle] = useState('')\n\tconst [text, setText] = useState('')\n\tconst [rating, setRating] = useState('Please select a rating')\n\tconst [showRatingError, setShowRatingError] = useState(false)\n\tconst [updateState, setUpdateState] = useState(false)\n\tconst createReviewHanlder = (e) => {\n\t\te.preventDefault()\n\t\tif (rating === 'Please select a rating') {\n\t\t\tsetShowRatingError(true)\n\t\t} else if (updateState) {\n\t\t\tdispatch(updateReview(reviewId, { title, text, rating: Number(rating) }))\n\t\t\tsetShowRatingError(false)\n\t\t\tsetText('')\n\t\t\tsetTitle('')\n\t\t\tsetRating('Please select a rating')\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcreateReview(match.params.id, { title, text, rating: Number(rating) })\n\t\t\t)\n\t\t\tdispatch({ type: REVIEW_CREATE_RESET })\n\t\t\tsetShowRatingError(false)\n\t\t\tsetText('')\n\t\t\tsetTitle('')\n\t\t\tsetRating('Please select a rating')\n\t\t}\n\t}\n\n\t// Handle review deletion\n\tconst deleteReviewHandler = (reviewId) => {\n\t\tdispatch(deleteReview(reviewId))\n\t\tdispatch({ type: REVIEW_DELETE_RESET })\n\t}\n\n\t// Bring in userLogin\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\t// Bring in current user for review update & deletion\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { error: userError, loading: userLoading, user } = userDetails\n\n\tuseEffect(() => {\n\t\tif (!user) {\n\t\t\t// // Get currenlty logged in user to check if he owns the review\n\t\t\tdispatch(getUserDetails())\n\t\t}\n\n\t\t// Loaded recipe & reviews\n\t\tif (!recipe || !recipe.name || recipe._id !== match.params.id) {\n\t\t\tdispatch(listRecipeDetails(match.params.id))\n\t\t}\n\n\t\tif (!reviews || !review.rating) {\n\t\t\tdispatch(listRecipeReviews(match.params.id))\n\t\t}\n\n\t\t// // Creation uccess\n\t\tif (success || updateSuccess) {\n\t\t\tdispatch(listRecipeReviews(match.params.id))\n\t\t}\n\n\t\t// deletion success\n\t\tif (deleteSuccess) {\n\t\t\tdispatch({ type: REVIEW_DELETE_RESET })\n\t\t}\n\n\t\t// Put review data in form\n\t\tif (review && review.rating) {\n\t\t\tsetRating(review.rating)\n\t\t\tsetTitle(review.title)\n\t\t\tsetText(review.text)\n\t\t}\n\t}, [dispatch, success, deleteSuccess, review, updateSuccess])\n\n\tconst [activeImage, setActiveImage] = useState(0)\n\n\tconst arr = [1, 2, 3]\n\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<Container>\n\t\t\t\t<Link to='/' className='btn  btn-primary'>\n\t\t\t\t\t<i\n\t\t\t\t\t\tstyle={{ color: '#fff', marginRight: '8px' }}\n\t\t\t\t\t\tclassName='fas fa-arrow-left '\n\t\t\t\t\t></i>\n\t\t\t\t\tGO BACK\n\t\t\t\t</Link>\n\t\t\t\t{error ? (\n\t\t\t\t\t<Alert type='danger'>{error}</Alert>\n\t\t\t\t) : loading ? (\n\t\t\t\t\t<div className='text-center mt-3'>\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Meta\n\t\t\t\t\t\t\ttitle={`${recipe.name} by ${\n\t\t\t\t\t\t\t\trecipe.user && recipe.user.firstName\n\t\t\t\t\t\t\t} ${recipe.user && recipe.user.lastName} `}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='recipe-details' id='recipe-details'>\n\t\t\t\t\t\t\t<section className='recipe-details__generic'>\n\t\t\t\t\t\t\t\t<div className='recipe-details__introduction'>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<h2 className='secondary-heading'>{recipe.name}</h2>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Rating\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={recipe.averageRating}\n\t\t\t\t\t\t\t\t\t\t\t\tnumReviews={reviews.length}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='recipe-details__owner'>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={recipe.user && recipe.user.photo}\n\t\t\t\t\t\t\t\t\t\t\talt={recipe.name}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{recipe.user && recipe.user.firstName}{' '}\n\t\t\t\t\t\t\t\t\t\t\t{recipe.user && recipe.user.lastName}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='d-flex'>\n\t\t\t\t\t\t\t\t\t\t<Badge type='info'>{recipe.cuisine}</Badge>\n\t\t\t\t\t\t\t\t\t\t{recipe.groups &&\n\t\t\t\t\t\t\t\t\t\t\trecipe.groups.map((gr) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Badge type='info' key={gr}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{gr}\n\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='recipe-details__information'>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h2>{recipe.ingredients && recipe.ingredients.length}</h2>\n\t\t\t\t\t\t\t\t\t\t\t<p>Ingredients</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h2>{recipe.prepTime}</h2>\n\t\t\t\t\t\t\t\t\t\t\t<p>Minutes to prepare</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h2>{recipe.cookTime}</h2>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t{recipe.cookTime <= 2 ? 'Hours' : 'Minutes'} to cook\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='recipe-details__images'>\n\t\t\t\t\t\t\t\t\t<div className='recipe-details__images-active'>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={recipe.images && recipe.images[activeImage]}\n\t\t\t\t\t\t\t\t\t\t\talt={recipe.name}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='recipe-details__images-select'>\n\t\t\t\t\t\t\t\t\t\t{recipe.images &&\n\t\t\t\t\t\t\t\t\t\t\trecipe.images.map((image, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\talt='Active image'\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setActiveImage(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section className='recipe-details__depth'>\n\t\t\t\t\t\t\t\t<h2 className='tertiary-heading '>Description</h2>\n\t\t\t\t\t\t\t\t<p>{recipe.description}</p>\n\t\t\t\t\t\t\t\t<h2 className='tertiary-heading '>Ingredients</h2>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t{recipe.ingredients &&\n\t\t\t\t\t\t\t\t\t\trecipe.ingredients.map((ingredient) => (\n\t\t\t\t\t\t\t\t\t\t\t<li key={ingredient}>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='far fa-dot-circle'></i> {ingredient}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<h2 className='tertiary-heading'>Steps</h2>\n\t\t\t\t\t\t\t\t<ul className='border-bottom pb-1'>\n\t\t\t\t\t\t\t\t\t{recipe.steps &&\n\t\t\t\t\t\t\t\t\t\trecipe.steps.map((step) => (\n\t\t\t\t\t\t\t\t\t\t\t<li key={step}>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-utensils'></i> {step}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<div className='d-flex flex-align'>\n\t\t\t\t\t\t\t\t\t<h2 className='tertiary-heading'>Reviews</h2>\n\t\t\t\t\t\t\t\t\t<Rating\n\t\t\t\t\t\t\t\t\t\tvalue={recipe.averageRating}\n\t\t\t\t\t\t\t\t\t\tnumReviews={reviews.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{!userInfo && (\n\t\t\t\t\t\t\t\t\t<p className='lead'>\n\t\t\t\t\t\t\t\t\t\tTo add a review please{' '}\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={redirect ? `/login?redirect=${redirect}` : '/login'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<strong className='primary'>Login</strong>\n\t\t\t\t\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t\t\t\t\tor{' '}\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={redirect ? `/signup?redirect=${redirect}` : '/login'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<strong className='primary'>Sign up</strong>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{userInfo && (\n\t\t\t\t\t\t\t\t\t<div className='create-rating'>\n\t\t\t\t\t\t\t\t\t\t<p className='lead'>Give it a review</p>\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={createReviewHanlder}>\n\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={rating}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRating(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='Please select a rating'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease select a rating\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='5'>5 stars - Excellent</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='4'>4 stars - Very Good</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='3'>3 stars - Fair Enough</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='2'>2 stars - Bad</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value='1'>1 star - Very Bad</option>\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Review title'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Review text'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t\t\t\t{showRatingError && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='danger'>Please select a rating </Alert>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{createLoading && <Loader />}\n\t\t\t\t\t\t\t\t\t\t\t{createError && createError.includes('E11000') ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='danger'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tYou have already reviewed this recipe. Your can edit\n\t\t\t\t\t\t\t\t\t\t\t\t\tyour existing review or delete it and create a new one{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\tcreateError &&\n\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Alert type='danger'>{createError} </Alert>\n\t\t\t\t\t\t\t\t\t\t\t\t}, 3000)\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-primary rounded'>\n\t\t\t\t\t\t\t\t\t\t\t\tSubmit Review\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{reviewsLoading && arr.map((i) => <SkeletonReview key={i} />)}\n\t\t\t\t\t\t\t\t{reviewsError && <Alert type='danger'>{reviewsError} </Alert>}\n\t\t\t\t\t\t\t\t{reviews.map((review) => (\n\t\t\t\t\t\t\t\t\t<div className='review-recipe' key={review._id}>\n\t\t\t\t\t\t\t\t\t\t<div className='review-recipe__image'>\n\t\t\t\t\t\t\t\t\t\t\t<img src={review.user.photo} alt={review.user.lastName} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='review-recipe__body'>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='d-flex flex-align'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{review.user.firstName} {review.user.lastName}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='review-recipe__createdAt'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(review.createdAt).fromNow()}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Rating value={review.rating} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='review-recipe__title'>{review.title} </p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{review.text} </p>\n\t\t\t\t\t\t\t\t\t\t\t\t{user && user._id === review.user._id && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteReviewHandler(review._id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn rounded btn-danger'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn rounded btn-info'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleUpdate(review._id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default RecipePage\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/SearchPage.js",["196"],"import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listFiltredRecipes } from '../actions/recipeActions'\nimport Recipe from '../components/recipes/Recipe'\nimport { Link } from 'react-router-dom'\nimport MainHeader from '../components/layout/MainHeader'\nimport Alert from '../components/complements/Alert'\nimport Paginate from '../components/complements/Paginate'\nimport SkeletonRecipe from '../components/skeletons/SkeletonRecipe'\n\nconst SearchPage = ({ match }) => {\n\tconst { term, cuisine } = match.params\n\n\tconst pageNumber = match.params.page || 1\n\t// Bring in recipes\n\tconst recipeFiltred = useSelector((state) => state.recipeFiltred)\n\tconst {\n\t\tloading: recipesLoading,\n\t\terror: recipesError,\n\t\trecipes,\n\t\tpages,\n\t\tpage,\n\t} = recipeFiltred\n\n\t// Manage active filters\n\tconst [activeRating, setActiveRating] = useState(' ')\n\tconst [activeTerm, setActiveTerm] = useState(term)\n\tconst [activeCuisine, setActiveCuisine] = useState(cuisine)\n\tconst [sortByNewest, setSortByNewest] = useState(true)\n\n\tconst [showSearchBox, setShowSearchBox] = useState(false)\n\tconst [termVal, setTermVal] = useState('')\n\n\tconst hanldeInput = (e) => {\n\t\tsetActiveTerm(e.target.value)\n\t\tsetTermVal(e.target.value)\n\t}\n\n\tconst dispatch = useDispatch()\n\tuseEffect(() => {\n\t\tdispatch(\n\t\t\tlistFiltredRecipes(\n\t\t\t\tactiveTerm,\n\t\t\t\tactiveRating,\n\t\t\t\tpageNumber,\n\t\t\t\tactiveCuisine,\n\t\t\t\tsortByNewest ? 'name' : 'createdAt'\n\t\t\t)\n\t\t)\n\n\t\twindow.addEventListener('click', (e) => {\n\t\t\tif (e.target === document.querySelector('.input-box')) {\n\t\t\t\tsetShowSearchBox(false)\n\t\t\t}\n\t\t})\n\t}, [\n\t\tdispatch,\n\t\tactiveTerm,\n\t\tactiveRating,\n\t\tactiveCuisine,\n\t\tsortByNewest,\n\t\tpageNumber,\n\t])\n\n\tconst arr = [1, 2, 3, 4, 5, 6, 7, 8]\n\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<div className='search-page'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<Link to='/' className='btn  btn-primary'>\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tstyle={{ color: '#fff', marginRight: '8px' }}\n\t\t\t\t\t\t\tclassName='fas fa-arrow-left '\n\t\t\t\t\t\t></i>\n\t\t\t\t\t\tGO BACK\n\t\t\t\t\t</Link>\n\t\t\t\t\t{showSearchBox && (\n\t\t\t\t\t\t<div className='input-box'>\n\t\t\t\t\t\t\t<div className='input-box__container'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Search recipes...'\n\t\t\t\t\t\t\t\t\tvalue={termVal}\n\t\t\t\t\t\t\t\t\tonChange={hanldeInput}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{!showSearchBox && (\n\t\t\t\t\t\t<div className='search-box'>\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tonClick={() => setShowSearchBox(true)}\n\t\t\t\t\t\t\t\tclassName='fas fa-search'\n\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<button className='filter'>\n\t\t\t\t\t\t<i className='fas fa-filter filterIcon'></i> Filters\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* Sorting by date */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setSortByNewest(!sortByNewest)}\n\t\t\t\t\t\tclassName={`filter ${sortByNewest && 'active'}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tNewest\n\t\t\t\t\t\t{sortByNewest && <i className='fas fa-times'></i>}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setSortByNewest(!setSortByNewest)}\n\t\t\t\t\t\tclassName={`filter ${!sortByNewest && 'active'}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tOldest\n\t\t\t\t\t\t{!sortByNewest && <i className='fas fa-times'></i>}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{/* Sorting by rating */}\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setActiveRating(4.5)}\n\t\t\t\t\t\t// When click this one set Active rating to a value\n\t\t\t\t\t\tclassName={`filter ${activeRating === 4.5}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tRating +4.5\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setActiveRating(4)}\n\t\t\t\t\t\t// When click this one set Active rating to a value\n\t\t\t\t\t\tclassName={`filter ${activeRating === 4}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tRating +4\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setActiveRating(3)}\n\t\t\t\t\t\t// When click this one set Active rating to a value\n\t\t\t\t\t\tclassName={`filter ${activeRating === 3}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tRating +3\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{activeRating !== ' ' && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setActiveRating(' ')}\n\t\t\t\t\t\t\tclassName={`filter active`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRating {activeRating}\n\t\t\t\t\t\t\t<i className='fas fa-times'></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/* Sorting by cuisines & groups */}\n\t\t\t\t\t<button className='filter '>Cuisines</button>\n\n\t\t\t\t\t{activeCuisine !== ' ' && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setActiveCuisine(' ')}\n\t\t\t\t\t\t\tclassName='filter active'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{activeCuisine} <i className='fas fa-times'></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{activeTerm !== ' ' && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setActiveTerm(' ')}\n\t\t\t\t\t\t\tclassName='filter active'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{activeTerm} <i className='fas fa-times'></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{recipesLoading ? (\n\t\t\t\t\t\t\t<div className='recipes'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{arr.map((i) => (\n\t\t\t\t\t\t\t\t\t\t<SkeletonRecipe key={i} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : recipesError ? (\n\t\t\t\t\t\t\t<Alert type='danger'>{recipesError}</Alert>\n\t\t\t\t\t\t) : recipes.length === 0 ? (\n\t\t\t\t\t\t\t<div className='no-results'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt='No recipes found'\n\t\t\t\t\t\t\t\t\tsrc='/images/sorry.png'\n\t\t\t\t\t\t\t\t\talt='No recipes found'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className='lead my-1 text-center'>\n\t\t\t\t\t\t\t\t\tSorry, we could'nt find any recipes\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className='recipes'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{recipes.map((recipe) => (\n\t\t\t\t\t\t\t\t\t\t<Recipe recipe={recipe} key={recipe._id} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Paginate\n\t\t\t\t\t\tpages={pages}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\tterm={activeTerm}\n\t\t\t\t\t\trating={activeRating}\n\t\t\t\t\t\tcuisine={activeCuisine}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default SearchPage\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/SignupPage.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/ProfilePage.js",["197","198","199","200","201","202","203"],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport {\n\tgetUserDetails,\n\tupdateDetails,\n\tupdatePassword,\n\tsendConfirmationEmail,\n\tdeleteUserAccount,\n} from '../actions/authActions'\nimport { listUserRecipes } from '../actions/recipeActions'\nimport { listUserReviews } from '../actions/reviewActions'\nimport { UPDATE_PASSWORD_RESET } from '../constants/authConstants'\nimport Container from '../components/layout/Container'\nimport MainHeader from '../components/layout/MainHeader'\nimport Alert from '../components/complements/Alert'\nimport Loader from '../components/complements/Loader'\nimport Recipe from '../components/recipes/Recipe'\nimport Review from '../components/auth/Review'\nimport Create from '../components/recipes/Create'\nimport Badge from '../components/complements/Badge'\nimport SkeletonRecipe from '../components/skeletons/SkeletonRecipe'\nimport SkeletonReview from '../components/skeletons/SkeletonReview'\nimport Meta from '../components/complements/Meta'\n\nconst Profile = ({ match }) => {\n\t// Switching Tabs\n\tconst [active, setActive] = useState('recipes')\n\tconst [showPasswordForm, setShowPasswordForm] = useState(false)\n\n\t// Form fields for details\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [email, setEmail] = useState('')\n\n\t// For password\n\tconst [currentPassword, setCurrentPassword] = useState('')\n\tconst [newPassword, setNewPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [showAlert, setShowAlert] = useState(false)\n\n\t// For photo upload\n\tconst [uploading, setUploading] = useState(false)\n\tconst [uploadErr, setUploadErr] = useState(false)\n\n\t// Brining user info & details\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { loading: infoLoading, userInfo } = userLogin\n\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { error: detailsError, user } = userDetails\n\n\tconst detailsUpdate = useSelector((state) => state.detailsUpdate)\n\tconst { loading: updateLoading, error: updateError, success } = detailsUpdate\n\n\tconst passwordUpdate = useSelector((state) => state.passwordUpdate)\n\tconst {\n\t\tloading: passwordLoading,\n\t\terror: passwordError,\n\t\tsuccess: passwordSuccess,\n\t} = passwordUpdate\n\n\t// Recipe delete\n\tconst recipeDelete = useSelector((state) => state.recipeDelete)\n\tconst { success: deleteSuccess } = recipeDelete\n\n\t// Triggers details update\n\tconst updateDetailsHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(updateDetails({ firstName, lastName, email }))\n\t}\n\n\t// Update password\n\tconst updatePasswordHandler = (e) => {\n\t\te.preventDefault()\n\t\t// Update pass here\n\t\tif (newPassword !== confirmPassword) {\n\t\t\tsetShowAlert(true)\n\t\t}\n\n\t\tsetShowAlert(false)\n\t\tdispatch({ type: UPDATE_PASSWORD_RESET })\n\t\tdispatch(updatePassword(currentPassword, newPassword))\n\t}\n\n\t// Confirmation email\n\tconst handleConfirmationEmail = () => {\n\t\tdispatch(sendConfirmationEmail())\n\t}\n\n\tconst emailConfirmation = useSelector((state) => state.emailConfirmation)\n\tconst {\n\t\tloading: emailLoading,\n\t\terror: emailError,\n\t\tsuccess: emailSuccess,\n\t} = emailConfirmation\n\n\tconst userConfirmEmail = useSelector((state) => state.userConfirmEmail)\n\tconst {\n\t\tloading: confirmEmailLoading,\n\t\tsuccess: confirmEmailSuccess,\n\t} = userConfirmEmail\n\n\t// Upload Profile photo\n\tconst uploadPhoto = async (e) => {\n\t\tconst file = e.target.files[0]\n\n\t\tconst formData = new FormData()\n\t\tformData.append('profilePhoto', file)\n\n\t\tsetUploading(true)\n\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tconst { data } = await axios.post(\n\t\t\t\t'/api/v1/upload/profile',\n\t\t\t\tformData,\n\t\t\t\tconfig\n\t\t\t)\n\t\t\tsetUploading(false)\n\t\t\tdispatch(updateDetails({ photo: data }))\n\t\t\twindow.location.reload()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetUploading(false)\n\t\t\tsetUploadErr(true)\n\t\t}\n\t}\n\n\t// Delete  account\n\tconst accountDelete = useSelector((state) => state.accountDelete)\n\tconst {\n\t\tsuccess: deleteAccountSuccess,\n\t\tloading: deleteAccountLoading,\n\t} = accountDelete\n\n\tconst handleAccountDelete = () => {\n\t\tif (window.confirm('Are you sure')) {\n\t\t\tdispatch(deleteUserAccount())\n\t\t}\n\t}\n\n\t// Triger user details & redirects\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\n\t// Bring in user recipes\n\tconst userRecipes = useSelector((state) => state.userRecipes)\n\tconst { loading: recipesLoading, recipes } = userRecipes\n\n\t// Bring in reviews\n\tconst userReviews = useSelector((state) => state.userReviews)\n\tconst { loading: reviewsLoading, reviews } = userReviews\n\n\tuseEffect(() => {\n\t\tif (!infoLoading && !userInfo) {\n\t\t\thistory.push('/')\n\t\t} else {\n\t\t\tif (!user || success) {\n\t\t\t\tdispatch(getUserDetails())\n\t\t\t} else {\n\t\t\t\tsetFirstName(user.firstName)\n\t\t\t\tsetLastName(user.lastName)\n\t\t\t\tsetEmail(user.email)\n\t\t\t\tdispatch(listUserRecipes(user._id))\n\t\t\t\tdispatch(listUserReviews(user._id))\n\n\t\t\t\tif (deleteSuccess) {\n\t\t\t\t\tdispatch(listUserRecipes(user._id))\n\t\t\t\t}\n\n\t\t\t\tif (active === 'recipes') {\n\t\t\t\t\tdispatch(listUserRecipes(user._id))\n\t\t\t\t}\n\n\t\t\t\tif (deleteAccountSuccess) {\n\t\t\t\t\twindow.location.href = '/'\n\t\t\t\t}\n\n\t\t\t\tif (confirmEmailSuccess) {\n\t\t\t\t\tdispatch(getUserDetails())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [\n\t\tdispatch,\n\t\tuserInfo,\n\t\tuser,\n\t\tgetUserDetails,\n\t\tdeleteSuccess,\n\t\tactive,\n\t\tdeleteAccountSuccess,\n\t\tconfirmEmailSuccess,\n\t])\n\n\tconst arr = [1, 2, 3]\n\treturn (\n\t\t<>\n\t\t\t<Meta\n\t\t\t\ttitle={`Cherish Recipes | ${user && user.firstName} ${\n\t\t\t\t\tuser && user.lastName\n\t\t\t\t}`}\n\t\t\t/>\n\t\t\t<MainHeader />\n\t\t\t<Container>\n\t\t\t\t<div className='profile'>\n\t\t\t\t\t<div className='profile__header'>\n\t\t\t\t\t\t<div className='profile__image'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt='user photo'\n\t\t\t\t\t\t\t\t\tsrc={user && user.photo}\n\t\t\t\t\t\t\t\t\talt={user && user.lastName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{user && user.firstName} {user && user.lastName}{' '}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<label class='profile-upload'>\n\t\t\t\t\t\t\t\t<input type='file' onChange={uploadPhoto} />\n\t\t\t\t\t\t\t\t<i class='fas fa-camera fa-2x'></i>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='profile__confirmation'>\n\t\t\t\t\t\t\t<Badge type={user && user.isEmailConfirmed ? 'info' : 'danger'}>\n\t\t\t\t\t\t\t\t{user && user.isEmailConfirmed ? 'Verified' : 'Not verified'}{' '}\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t{user && !user.isEmailConfirmed && (\n\t\t\t\t\t\t\t\t<div className='d-flex flex-align flex-column'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirmationEmail}\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-primary rounded '\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p>Re-send confirmation email</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{emailLoading && <Loader type='medium white' />}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{confirmEmailLoading && <Loader />}\n\t\t\t\t\t\t\t{emailError && <Alert type='danger'>{emailError} </Alert>}\n\t\t\t\t\t\t\t{emailSuccess && (\n\t\t\t\t\t\t\t\t<Alert type='info'>Email sent sucessfully</Alert>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{detailsError && <Alert type='danger'>{detailsError}</Alert>}\n\n\t\t\t\t\t<div className='profile__grids'>\n\t\t\t\t\t\t<div className='profile__aside'>\n\t\t\t\t\t\t\t<p className='lead uppercase text-muted'>Activity</p>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => setActive('recipes')}\n\t\t\t\t\t\t\t\tclassName={active === 'recipes' && 'active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRecipes\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => setActive('reviews')}\n\t\t\t\t\t\t\t\tclassName={active === 'reviews' && 'active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => setActive('create')}\n\t\t\t\t\t\t\t\tclassName={active === 'create' && 'active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate Recipe\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => setActive('edit')}\n\t\t\t\t\t\t\t\tclassName={active === 'edit' && 'active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEdit Profile\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='profile__content'>\n\t\t\t\t\t\t\t<p className='lead uppercase text-muted'>{active}</p>\n\t\t\t\t\t\t\t{/* For now */}\n\t\t\t\t\t\t\t{active === 'edit' ? (\n\t\t\t\t\t\t\t\t<div className='profile__content-edit'>\n\t\t\t\t\t\t\t\t\t<p className='lead mt-1'>Edit account information</p>\n\t\t\t\t\t\t\t\t\t<form onSubmit={updateDetailsHandler}>\n\t\t\t\t\t\t\t\t\t\t{success && (\n\t\t\t\t\t\t\t\t\t\t\t<div className='my-1'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='success'>Updated with success</Alert>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<button className='btn btn-primary btn-lg rounded'>\n\t\t\t\t\t\t\t\t\t\t\tUpdate details\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-gray'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setShowPasswordForm(!showPasswordForm)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tChange password{' '}\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\tclassName={`fas fa-chevron-${\n\t\t\t\t\t\t\t\t\t\t\t\tshowPasswordForm ? 'up' : 'down'\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t></i>{' '}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{showPasswordForm && (\n\t\t\t\t\t\t\t\t\t\t<form className='mb-1' onSubmit={updatePasswordHandler}>\n\t\t\t\t\t\t\t\t\t\t\t{showAlert && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='danger'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease enter matching passwords{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{passwordLoading && <Loader />}\n\t\t\t\t\t\t\t\t\t\t\t{passwordError && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='danger'>{passwordError}</Alert>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{passwordSuccess && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='success'>Password updated </Alert>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Current password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={currentPassword}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='mt-1'\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setCurrentPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='New password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newPassword}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{updateLoading && <Loader />}\n\t\t\t\t\t\t\t\t\t\t\t{updateError && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Alert type='danger'>{updateError}</Alert>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-lg btn-primary rounded'>\n\t\t\t\t\t\t\t\t\t\t\t\tChange password{' '}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<div className='py-1 border-top'>\n\t\t\t\t\t\t\t\t\t\t{deleteAccountLoading && <Loader />}\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleAccountDelete}\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-lg btn-primary rounded'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDelete my account\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : active === 'recipes' ? (\n\t\t\t\t\t\t\t\trecipes.length > 0 && user ? (\n\t\t\t\t\t\t\t\t\t<div className='grid grid-3 my-1'>\n\t\t\t\t\t\t\t\t\t\t{recipes.map((recipe) => (\n\t\t\t\t\t\t\t\t\t\t\t<Recipe key={recipe._id} recipe={recipe} user={user} />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : recipesLoading ? (\n\t\t\t\t\t\t\t\t\t<div className='grid grid-3'>\n\t\t\t\t\t\t\t\t\t\t{arr.map((i) => (\n\t\t\t\t\t\t\t\t\t\t\t<SkeletonRecipe key={i} />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='text-center profile__content-nothing'>\n\t\t\t\t\t\t\t\t\t\t<img alt='Nothing found' src={`/images/no-${active}.png`} />\n\t\t\t\t\t\t\t\t\t\t<p className='lead my-2'>Nothing here yet</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : active == 'reviews' ? (\n\t\t\t\t\t\t\t\treviews.length > 0 ? (\n\t\t\t\t\t\t\t\t\t<div className='grid grid-3'>\n\t\t\t\t\t\t\t\t\t\t{reviews.map((review) => (\n\t\t\t\t\t\t\t\t\t\t\t<Review review={review} key={review._id} />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : reviewsLoading ? (\n\t\t\t\t\t\t\t\t\t<div className='grid grid-3'>\n\t\t\t\t\t\t\t\t\t\t{arr.map((i) => (\n\t\t\t\t\t\t\t\t\t\t\t<SkeletonReview key={i} />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='text-center profile__content-nothing'>\n\t\t\t\t\t\t\t\t\t\t<img alt='Nothing found' src={`/images/no-${active}.png`} />\n\t\t\t\t\t\t\t\t\t\t<p className='lead my-2'>Nothing here yet</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : active == 'create' ? (\n\t\t\t\t\t\t\t\t<Create />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className='text-center profile__content-nothing'>\n\t\t\t\t\t\t\t\t\t<img alt='Nothing found' src={`/images/no-${active}.png`} />\n\t\t\t\t\t\t\t\t\t<p className='lead my-2'>Nothing here yet</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default Profile\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/pages/ConfirmEmail.js",["204"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { confirmUserEmail } from '../actions/authActions'\nimport Alert from '../components/complements/Alert'\nimport Loader from '../components/complements/Loader'\nimport MainHeader from '../components/layout/MainHeader'\n\nconst ConfirmEmail = ({ match, history }) => {\n\tconst confirmationToken = match.params.token\n\n\t// Get confirmation state\n\tconst userConfirmEmail = useSelector((state) => state.userConfirmEmail)\n\tconst { loading, error, success } = userConfirmEmail\n\n\tconst dispatch = useDispatch()\n\tuseEffect(() => {\n\t\tdispatch(confirmUserEmail(confirmationToken))\n\n\t\tif (success) {\n\t\t\thistory.push('/')\n\t\t}\n\t}, [dispatch, success])\n\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<div className='container text-center'>\n\t\t\t\t{loading && <Loader />} {error && <Alert type='danger'>{error} </Alert>}{' '}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default ConfirmEmail\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/Footer.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/HomeHeader.js",["205","206"],"import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUserDetails } from '../../actions/authActions'\nimport { Link, useHistory } from 'react-router-dom'\nimport { logout } from '../../actions/authActions'\n\nconst HomeHeader = () => {\n\tconst [term, setTerm] = useState('')\n\n\tconst history = useHistory()\n\tconst searchHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (term.trim()) {\n\t\t\thistory.push(`/search/${term}`)\n\t\t} else {\n\t\t\thistory.push('/')\n\t\t}\n\t}\n\n\tconst dispatch = useDispatch()\n\n\t// Bring in user info\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { user, loading: userLoading } = userDetails\n\n\tconst handleLogout = () => {\n\t\tdispatch(logout())\n\t}\n\n\tuseEffect(() => {\n\t\tif (userInfo && !user) {\n\t\t\tdispatch(getUserDetails())\n\t\t}\n\t}, [dispatch, user])\n\treturn (\n\t\t<>\n\t\t\t<header className='header' id='header'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<nav className='header__nav'>\n\t\t\t\t\t\t<h3 className='header__logo logo'>\n\t\t\t\t\t\t\t<a href='/'>\n\t\t\t\t\t\t\t\tCherish <span className='header__logo--colored'>Recipes</span>\n\t\t\t\t\t\t\t\t{'>'}{' '}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{userInfo ? (\n\t\t\t\t\t\t\t\t<div className='user-logged'>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName='user-logged__outer'\n\t\t\t\t\t\t\t\t\t\tto={`/profile/${userInfo.user._id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={userInfo.user.photo}\n\t\t\t\t\t\t\t\t\t\t\talt={userInfo.user.firstName}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{userInfo.user.firstName} {userInfo.user.lastName}{' '}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-lg btn-primary rounded'\n\t\t\t\t\t\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Link to='/login'>\n\t\t\t\t\t\t\t\t\t\t<li className='btn btn-primary rounded' id='login'>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<Link to='/signup'>\n\t\t\t\t\t\t\t\t\t\t<li className='btn btn-primary rounded' id='signup'>\n\t\t\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<form className='header__search' onSubmit={searchHandler}>\n\t\t\t\t\t\t<h2 className='primary-heading text-center'>\n\t\t\t\t\t\t\tDiscover the world best recipes & foods\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i className='fas fa-search'></i>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tclassName='search'\n\t\t\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t\t\t\tonChange={(e) => setTerm(e.target.value)}\n\t\t\t\t\t\t\t\tplaceholder='What do you want to cook?'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</>\n\t)\n}\n\nexport default HomeHeader\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/Container.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/layout/MainHeader.js",["207","208","209","210"],"import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { logout, getUserDetails } from '../../actions/authActions'\nimport Loader from '../complements/Loader'\n\nconst MainHeader = () => {\n\t// Bring in user info\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { loading, user } = userDetails\n\n\t///// Comback for this to update component when update is trigirred\n\tconst detailsUpdate = useSelector((state) => state.detailsUpdate)\n\tconst { success } = detailsUpdate\n\t////\n\n\tconst dispatch = useDispatch()\n\n\tconst handleLogout = () => {\n\t\tdispatch(logout())\n\t}\n\n\tuseEffect(() => {\n\t\tif (!user) {\n\t\t\tdispatch(getUserDetails())\n\t\t}\n\t}, [dispatch])\n\n\treturn (\n\t\t<>\n\t\t\t<header className='main-header'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<nav className='header__nav'>\n\t\t\t\t\t\t<a href='/'>\n\t\t\t\t\t\t\t<h3 className='header__logo logo'>\n\t\t\t\t\t\t\t\tCherish <span className='header__logo--colored'>Recipes</span>\n\t\t\t\t\t\t\t\t{'>'}{' '}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t<Loader type='medium' />\n\t\t\t\t\t\t\t) : user ? (\n\t\t\t\t\t\t\t\t<div className='user-logged '>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName='user-logged__outer user-logged__outer--main'\n\t\t\t\t\t\t\t\t\t\tto={`/profile/${user._id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\talt={user.firstName}\n\t\t\t\t\t\t\t\t\t\t\tsrc={user.photo}\n\t\t\t\t\t\t\t\t\t\t\talt={user.firstName}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{user.firstName} {user.lastName}{' '}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-lg btn-primary rounded'\n\t\t\t\t\t\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Link to='/login'>\n\t\t\t\t\t\t\t\t\t\t<li className='btn btn-primary rounded' id='login'>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<Link to='/signup'>\n\t\t\t\t\t\t\t\t\t\t<li className='btn btn-primary rounded' id='signup'>\n\t\t\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</>\n\t)\n}\n\nexport default MainHeader\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/recipeConstants.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/authConstants.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Alert.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/constants/reviewConstants.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Meta.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Paginate.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Loader.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/complements/Badge.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/redirects/Groups.js",["211"],"import { Link } from 'react-router-dom'\nconst Groups = () => {\n\tconst groups = [\n\t\t{\n\t\t\tname: 'Dairy',\n\t\t\timg: '/images/groups/dairy.jpg',\n\t\t},\n\t\t{\n\t\t\tname: 'Fruits',\n\t\t\timg: '/images/groups/fruits.jpg',\n\t\t},\n\t\t{\n\t\t\tname: 'Protein foods',\n\t\t\timg: '/images/groups/protein.jpg',\n\t\t},\n\t\t{\n\t\t\tname: 'Vegetables',\n\t\t\timg: '/images/groups/vegetables.jpg',\n\t\t},\n\t\t{\n\t\t\tname: 'Grains',\n\t\t\timg: '/images/groups/grains.jpg',\n\t\t},\n\t]\n\treturn (\n\t\t<section className='groups' id='groups'>\n\t\t\t<div class='mb-2 mt-2'>\n\t\t\t\t{groups.map((group) => (\n\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t<img src={group.img} alt={group.name} />\n\t\t\t\t\t\t<p>{group.name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<h2 class='primary-heading mt-2'>Find your favorite food groups</h2>\n\t\t</section>\n\t)\n}\n\nexport default Groups\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Recipes.js",["212","213","214"],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { listRecipes, addToViewed } from '../../actions/recipeActions'\nimport Alert from '../complements/Alert'\nimport Recipe from './Recipe'\nimport SkeletonRecipe from '../skeletons/SkeletonRecipe'\nimport Skeleton from '../skeletons/Skeleton'\n\nconst Recipes = () => {\n\tconst dispatch = useDispatch()\n\n\tconst recipeList = useSelector((state) => state.recipeList)\n\tconst arr = [1, 2, 3, 4, 5, 6, 7, 8]\n\n\t// From Local storage\n\tconst recentlyViewed = useSelector((state) => state.recentlyViewed)\n\tconst { recentlyViewed: recipesFromLs } = recentlyViewed\n\n\tconst { loading, error, recipes } = recipeList\n\n\tconst handleAddToViewed = (recipeId) => {\n\t\tdispatch(addToViewed(recipeId))\n\t}\n\n\tuseEffect(() => {\n\t\tif (!recipes || recipes.length === 0) {\n\t\t\tdispatch(listRecipes())\n\t\t}\n\t}, [dispatch])\n\n\treturn (\n\t\t<section className='recipes' id='recipes'>\n\t\t\t{recipesFromLs.length > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<h2 className='primary-heading my-1'>Recently viewed</h2>\n\n\t\t\t\t\t<div className='grid grid-4 mb-2'>\n\t\t\t\t\t\t{recipesFromLs.slice(0, 4).map((recipe) => (\n\t\t\t\t\t\t\t<Recipe recipe={recipe} key={recipe._id} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{loading ? (\n\t\t\t\t<>\n\t\t\t\t\t<Skeleton type='title' />\n\t\t\t\t\t<div className='grid grid-4'>\n\t\t\t\t\t\t{arr.map((i) => (\n\t\t\t\t\t\t\t<SkeletonRecipe key={i} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : error ? (\n\t\t\t\t<Alert type='danger'>{error}</Alert>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h2 className='primary-heading my-1'>Latest recipes</h2>\n\t\t\t\t\t<div className='mb-2'>\n\t\t\t\t\t\t{recipes.map((recipe) => (\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tonClick={() => handleAddToViewed(recipe._id)}\n\t\t\t\t\t\t\t\tkey={recipe._id}\n\t\t\t\t\t\t\t\tto={`/recipe/${recipe._id}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className='recipe'>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName='recipe__image'\n\t\t\t\t\t\t\t\t\t\tsrc={recipe.images[0]}\n\t\t\t\t\t\t\t\t\t\talt={recipe.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<p className='recipe__name'>{recipe.name} </p>\n\t\t\t\t\t\t\t\t\t<a className='recipe__owner'>\n\t\t\t\t\t\t\t\t\t\t<img src={recipe.user.photo} alt={recipe.user.firstName} />\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{recipe.user.firstName} {recipe.user.lastName}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nexport default Recipes\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Rating.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/redirects/Cuisines.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Recipe.js",["215"],"import { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { addToViewed, deleteRecipe } from '../../actions/recipeActions'\n\nconst Recipe = ({ recipe, user }) => {\n\tconst location = useLocation()\n\tconst [showButtons, setShowButtons] = useState(false)\n\n\tconst dispatch = useDispatch()\n\tconst deleteRecipeHandler = (id) => {\n\t\tdispatch(deleteRecipe(id))\n\t}\n\n\t// Handle update / redirect\n\tconst history = useHistory()\n\tconst handleUpdate = (recipeId) => {\n\t\treturn history.push(`/recipe/${recipeId}/edit`)\n\t}\n\n\t// Add to viewed\n\tconst handleAddToViewed = (recipeId) => {\n\t\tdispatch(addToViewed(recipeId))\n\t}\n\n\tuseEffect(() => {\n\t\tif (location.pathname.includes('profile')) {\n\t\t\tsetShowButtons(true)\n\t\t}\n\t}, [location])\n\treturn (\n\t\t<div className='recipe' onClick={() => handleAddToViewed(recipe._id)}>\n\t\t\t<Link to={`/recipe/${recipe._id}`}>\n\t\t\t\t<img\n\t\t\t\t\tclassName='recipe__image'\n\t\t\t\t\tsrc={recipe.images[0]}\n\t\t\t\t\talt={recipe.name}\n\t\t\t\t/>\n\t\t\t\t<p className='recipe__name'>{recipe.name} </p>\n\t\t\t\t<a className='recipe__owner'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={user ? user.photo : recipe.user.photo}\n\t\t\t\t\t\talt={user ? user.firstName : recipe.user.firstName}\n\t\t\t\t\t/>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{user ? user.firstName : recipe.user.firstName}{' '}\n\t\t\t\t\t\t{user ? user.lastName : recipe.user.lastName}\n\t\t\t\t\t</p>\n\t\t\t\t</a>\n\t\t\t</Link>\n\t\t\t{showButtons && (\n\t\t\t\t<>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn btn-info rounded'\n\t\t\t\t\t\tonClick={() => handleUpdate(recipe._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn btn-danger rounded'\n\t\t\t\t\t\tonClick={() => deleteRecipeHandler(recipe._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Recipe\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/recipeActions.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/recipes/Create.js",["216","217","218","219"],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { createRecipe, updateRecipe } from '../../actions/recipeActions'\nimport Alert from '../complements/Alert'\nimport Loader from '../complements/Loader'\nimport { useHistory } from 'react-router-dom'\nimport { RECIPE_UPDATE_RESET } from '../../constants/recipeConstants'\n\nconst Create = ({ recipe }) => {\n\t// Recipe form fields\n\tconst [name, setName] = useState('')\n\tconst [description, setDescription] = useState('')\n\tconst [ingredients, setIngredients] = useState([])\n\tconst [steps, setSteps] = useState([])\n\tconst [images, setImages] = useState([])\n\tconst [level, setLevel] = useState('Easy') // Select menu\n\tconst [cuisine, setCuisine] = useState('Moroccan') // Select menu\n\tconst [groups, setGroups] = useState([]) // Checkbox\n\tconst [prepTime, setPrepTime] = useState(0)\n\tconst [cookTime, setCookTime] = useState(0)\n\n\t// Images upload\n\tconst [uploading, setUploading] = useState(false)\n\tconst [uploadErr, setUploadErr] = useState(false)\n\n\t// Steps form\n\tconst [step, setStep] = useState('')\n\tconst handleSteps = (e) => {\n\t\te.preventDefault()\n\t\tsetSteps([...steps, step])\n\t\tsetStep('')\n\t}\n\n\tconst deleteStep = (stp) => {\n\t\tconst stepsCopy = [...steps]\n\t\tconst newSteps = stepsCopy.filter((st) => st !== stp)\n\t\tsetSteps(newSteps)\n\t}\n\n\t// Ingredients Form\n\tconst [ingredient, setIngredient] = useState('')\n\tconst handleIngredients = (e) => {\n\t\te.preventDefault()\n\t\tsetIngredients([...ingredients, ingredient])\n\t\tsetIngredient('')\n\t}\n\n\tconst deleteIngredient = (ing) => {\n\t\tconst ingredientsCopy = [...ingredients]\n\t\tconst newIngredients = ingredientsCopy.filter((ingre) => ingre !== ing)\n\t\tsetIngredients(newIngredients)\n\t}\n\n\t// Handle checkbox\n\tconst groupsArr = ['dairy', 'fruits', 'protein foods', 'vegetables', 'grains']\n\tconst handleCheckbox = (e) => {\n\t\tconst value = e.target.value\n\t\tconst checked = e.target.checked\n\n\t\tif (checked) {\n\t\t\tsetGroups([...groups, value])\n\t\t} else {\n\t\t\tconst groupsCopy = [...groups]\n\t\t\tconst newGroups = groupsCopy.filter((grp) => grp !== value)\n\t\t\tsetGroups(newGroups)\n\t\t}\n\t}\n\n\t// Brining user info & details\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { loading: infoLoading, userInfo } = userLogin\n\n\tconst recipeCreate = useSelector((state) => state.recipeCreate)\n\tconst { loading: createLoading, error: createError, success } = recipeCreate\n\n\tconst recipeUpdate = useSelector((state) => state.recipeUpdate)\n\tconst {\n\t\tloading: updateLoading,\n\t\terror: updateError,\n\t\tsuccess: updateSuccess,\n\t} = recipeUpdate\n\n\tconst [showMessage, setShowMessage] = useState(false)\n\n\tconst dispatch = useDispatch()\n\n\t// Upload images\n\tconst uploadImgaes = async (e) => {\n\t\tconst filesArr = []\n\t\tconst files = Object.keys(e.target.files).map((key) =>\n\t\t\tfilesArr.push(e.target.files[key])\n\t\t)\n\n\t\tconst formData = new FormData()\n\t\tconst uploaders = filesArr.map((file) => {\n\t\t\treturn formData.append('recipeImages', file)\n\t\t})\n\t\tsetUploading(true)\n\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tconst { data } = await axios.post(\n\t\t\t\t'/api/v1/upload/recipe',\n\t\t\t\tformData,\n\t\t\t\tconfig\n\t\t\t)\n\t\t\tconst dataCopy = [...data]\n\t\t\tconst newData = dataCopy.map((img) => img.toString())\n\t\t\tsetImages(data)\n\t\t\tsetUploading(false)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetUploading(false)\n\t\t\tsetUploadErr(true)\n\t\t}\n\t}\n\n\t// Create a new recipe\n\tconst handleCreate = () => {\n\t\tconst recipeData = {\n\t\t\tname,\n\t\t\tdescription,\n\t\t\tcuisine,\n\t\t\tlevel,\n\t\t\tcookTime,\n\t\t\tprepTime,\n\t\t\tsteps,\n\t\t\tingredients,\n\t\t\tgroups,\n\t\t\timages,\n\t\t}\n\t\tif (recipe && recipe.name) {\n\t\t\tdispatch(updateRecipe(recipe._id, recipeData))\n\t\t\tsetShowMessage(false)\n\t\t\tconsole.log(recipeData)\n\t\t} else {\n\t\t\tdispatch(createRecipe(recipeData))\n\t\t\tsetShowMessage(false)\n\t\t}\n\t}\n\n\tconst history = useHistory()\n\tuseEffect(() => {\n\t\t// if (!infoLoading && !userInfo) {\n\t\t// \thistory.push('/')\n\t\t// }\n\t\tif (success) {\n\t\t\tsetShowMessage(true)\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetShowMessage(false)\n\t\t\t}, 3000)\n\t\t}\n\n\t\tif (recipe && recipe.name) {\n\t\t\t// Recipe form fields\n\t\t\tsetName(recipe.name)\n\t\t\tsetDescription(recipe.description)\n\t\t\tsetIngredients(recipe.ingredients)\n\t\t\tsetSteps(recipe.steps)\n\t\t\tsetImages(recipe.images)\n\t\t\tsetLevel(recipe.level)\n\t\t\tsetCuisine(recipe.cuisine)\n\t\t\tsetGroups(recipe.groups)\n\t\t\tsetCookTime(recipe.cookTime)\n\t\t\tsetPrepTime(recipe.prepTime)\n\t\t}\n\n\t\tif (updateSuccess) {\n\t\t\thistory.push(`/profile/${recipe.user}`)\n\t\t\tdispatch({ type: RECIPE_UPDATE_RESET })\n\t\t}\n\t}, [dispatch, userInfo, success, recipe, history, updateSuccess])\n\n\treturn (\n\t\t<div className='create'>\n\t\t\t<form onSubmit={handleCreate}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tplaceholder='Recipe name'\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\tplaceholder='Recipe description'\n\t\t\t\t\tvalue={description}\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t></textarea>\n\t\t\t\t<div className='create__selects'>\n\t\t\t\t\t<label htmlFor='level'>\n\t\t\t\t\t\tSelect level\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname='level'\n\t\t\t\t\t\t\tvalue={level}\n\t\t\t\t\t\t\tonChange={(e) => setLevel(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='Easy'>Easy</option>\n\t\t\t\t\t\t\t<option value='Intermediate'>Intermediate</option>\n\t\t\t\t\t\t\t<option value='Advanced'>Advanced</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label htmlFor='cuisine'>\n\t\t\t\t\t\tSelect cuisine\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname='cuisine'\n\t\t\t\t\t\t\tvalue={cuisine}\n\t\t\t\t\t\t\tonChange={(e) => setCuisine(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='Moroccan'>Moroccan</option>\n\t\t\t\t\t\t\t<option value='Mexican'>Mexican</option>\n\t\t\t\t\t\t\t<option value='Spanish'>Spanish</option>\n\t\t\t\t\t\t\t<option value='Chinese'>Chinese</option>\n\t\t\t\t\t\t\t<option value='Japanese'>Japanese</option>\n\t\t\t\t\t\t\t<option value='Indian'>Indian</option>\n\t\t\t\t\t\t\t<option value='American'>American</option>\n\t\t\t\t\t\t\t<option value='Turkish'>Turkish</option>\n\t\t\t\t\t\t\t<option value='Thai'>Thai</option>\n\t\t\t\t\t\t\t<option value='French'>French</option>\n\t\t\t\t\t\t\t<option value='Italian'>Italian</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='create__times'>\n\t\t\t\t\t<label htmlFor='prepTime'>\n\t\t\t\t\t\t<p className='my-half'>Preparation time</p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='prepTime'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Ente preparation time'\n\t\t\t\t\t\t\tvalue={prepTime}\n\t\t\t\t\t\t\tonChange={(e) => setPrepTime(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label htmlFor='cookTime'>\n\t\t\t\t\t\t<p className='my-half'>Cooking time</p>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Ente cooking time'\n\t\t\t\t\t\t\tvalue={cookTime}\n\t\t\t\t\t\t\tonChange={(e) => setCookTime(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='create__groups'>\n\t\t\t\t\t<p className='lead my-half'>Select groups</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{groupsArr.map((gr) => (\n\t\t\t\t\t\t\t<label className='checkbox-container'>\n\t\t\t\t\t\t\t\t{gr}\n\t\t\t\t\t\t\t\t<input onChange={handleCheckbox} type='checkbox' value={gr} />\n\t\t\t\t\t\t\t\t<span className='checkmark'></span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{uploadErr && <Alert type='danger'>Upload Error </Alert>}\n\t\t\t\t{uploading && <Loader />}\n\t\t\t\t<p className='lead mt-1'>Add images</p>\n\t\t\t\t<label class='custom-file-upload'>\n\t\t\t\t\t<input type='file' multiple onChange={uploadImgaes} />\n\t\t\t\t\t<i className='fa fa-images'></i>\n\t\t\t\t\t{'  '} Import\n\t\t\t\t</label>\n\t\t\t</form>\n\n\t\t\t{/* Ingredients & Steps Forms */}\n\t\t\t<div className='grid grid-2'>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className='tertiary-heading'>Steps</h2>\n\t\t\t\t\t<form onSubmit={handleSteps}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tplaceholder='Enter steps'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={step}\n\t\t\t\t\t\t\tonChange={(e) => setStep(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t\t<ul className='mb-3'>\n\t\t\t\t\t\t{steps.map((step, index) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-dot-circle'></i> {step}{' '}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName='fas fa-times ml-2'\n\t\t\t\t\t\t\t\t\tonClick={() => deleteStep(step)}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className='tertiary-heading'>Ingredients</h2>\n\t\t\t\t\t<form onSubmit={handleIngredients}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tplaceholder='Enter ingredients'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={ingredient}\n\t\t\t\t\t\t\tonChange={(e) => setIngredient(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{ingredients.map((ing, index) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-dot-circle'></i> {ing}{' '}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName='fas fa-times ml-2'\n\t\t\t\t\t\t\t\t\tonClick={() => deleteIngredient(ing)}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{showMessage && <Alert type='success'>Recipe created</Alert>}\n\n\t\t\t{createError ||\n\t\t\t\t(updateError && <Alert type='danger'>{createError}</Alert>)}\n\t\t\t{createLoading || (updateLoading && <Loader />)}\n\n\t\t\t<button\n\t\t\t\tclassName='btn btn-lg btn-primary my-3 d-block'\n\t\t\t\tonClick={handleCreate}\n\t\t\t>\n\t\t\t\t{recipe && recipe.name ? 'Update Recipe' : 'Create Recipe'}\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default Create\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/reviewActions.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/actions/authActions.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Review.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/SkeletonReview.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Signup.js",["220"],"import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { signup } from '../../actions/authActions'\nimport Loader from '../complements/Loader'\nimport Alert from '../complements/Alert'\n\nconst Signup = () => {\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\n\tconst userSignup = useSelector((state) => state.userSignup)\n\tconst { error, loading } = userSignup\n\n\t// Redirect\n\tconst location = useLocation()\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\n\n\tconst dispatch = useDispatch()\n\tconst signupHandler = (e) => {\n\t\te.preventDefault()\n\n\t\tdispatch(signup(firstName, lastName, email, password))\n\t}\n\n\t// check for userinfo & redirect\n\tconst history = useHistory()\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tif (redirect) {\n\t\t\t\thistory.push(redirect)\n\t\t\t} else {\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t}\n\t}, [history, userInfo])\n\n\treturn (\n\t\t<form onSubmit={signupHandler}>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='input'\n\t\t\t\tplaceholder='First name'\n\t\t\t\tvalue={firstName}\n\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='input'\n\t\t\t\tplaceholder='Last name'\n\t\t\t\tvalue={lastName}\n\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='input'\n\t\t\t\tplaceholder='Enter email...'\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='password'\n\t\t\t\tclassName='input'\n\t\t\t\tplaceholder='Enter password...'\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t/>\n\t\t\t{loading && (\n\t\t\t\t<div className='text-center'>\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{error && <Alert type='danger'>{error}</Alert>}\n\t\t\t<button type='submit' className='btn btn-lg btn-primary rounded'>\n\t\t\t\tSign up\n\t\t\t</button>\n\t\t\t<div>\n\t\t\t\t<Link to='/login'>\n\t\t\t\t\tAlready have an account? <strong className='primary'>Login</strong>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default Signup\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/auth/Login.js",["221"],"import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, Link, useLocation } from 'react-router-dom'\nimport { login, forgotPassword, resetPassword } from '../../actions/authActions'\nimport Loader from '../complements/Loader'\nimport Alert from '../complements/Alert'\n\nconst Login = () => {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst location = useLocation()\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\n\n\tconst dispatch = useDispatch()\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { error, loading, userInfo } = userLogin\n\n\tconst loginHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(login(email, password))\n\t}\n\n\t// Forgot password\n\tconst [isForgotClicked, setIsForgotClicked] = useState(false)\n\n\tconst passwordForgot = useSelector((state) => state.passwordForgot)\n\tconst {\n\t\terror: forgotError,\n\t\tloading: forgotLoading,\n\t\tsuccess: forgotSuccess,\n\t} = passwordForgot\n\n\tconst handleForgotPass = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(forgotPassword(email))\n\t}\n\n\t// Password reset\n\tconst [resetToken, setResetToken] = useState('')\n\tconst [newPassword, setNewPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [errMsg, setErrMsg] = useState(false)\n\tconst passwordReset = useSelector((state) => state.passwordReset)\n\tconst {\n\t\terror: resetError,\n\t\tloading: resetLoading,\n\t\tsuccess: resetSuccess,\n\t} = passwordReset\n\n\tconst handlePasswordReset = (e) => {\n\t\te.preventDefault()\n\n\t\tif (confirmPassword !== newPassword) {\n\t\t\tsetErrMsg(true)\n\t\t} else {\n\t\t\tif (resetToken !== '') {\n\t\t\t\tsetErrMsg(false)\n\t\t\t\tdispatch(resetPassword(newPassword, resetToken))\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for userinfo & redirect\n\tconst history = useHistory()\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tif (!redirect) {\n\t\t\t\thistory.push(`/profile/${userInfo.user._id}`)\n\t\t\t} else {\n\t\t\t\thistory.push(`${redirect}`)\n\t\t\t}\n\t\t}\n\t}, [history, userInfo])\n\n\treturn (\n\t\t<>\n\t\t\t{isForgotClicked && !forgotSuccess ? (\n\t\t\t\t<form onSubmit={handleForgotPass}>\n\t\t\t\t\t<h2 className='primary my-half'>Forgot password</h2>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter your email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{forgotLoading && <Loader />}\n\t\t\t\t\t{forgotError && <Alert type='danger'>{forgotError} </Alert>}\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='btn btn-lg btn-primary rounded'>Submit</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p\n\t\t\t\t\t\tonClick={() => setIsForgotClicked(false)}\n\t\t\t\t\t\tclassName='btn btn-lg btn-info'\n\t\t\t\t\t>\n\t\t\t\t\t\tBack to Login\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t) : forgotSuccess ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className='my-1'>\n\t\t\t\t\t\t<Alert type='success'>\n\t\t\t\t\t\t\tAn email with a reset code has been sent. Check your email!\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form onSubmit={handlePasswordReset}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Enter reset code'\n\t\t\t\t\t\t\tvalue={resetToken}\n\t\t\t\t\t\t\tonChange={(e) => setResetToken(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='New password'\n\t\t\t\t\t\t\tvalue={newPassword}\n\t\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm enw password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errMsg && (\n\t\t\t\t\t\t\t<Alert type='danger'>Please enter matching passwords </Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{resetLoading && <Loader />}\n\t\t\t\t\t\t{resetError && <Alert type='danger'> {resetError}</Alert>}\n\t\t\t\t\t\t{resetSuccess && <Alert type='success'>Password Changed </Alert>}\n\t\t\t\t\t\t<button className='btn btn-lg btn-primary rounded'>Submit</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => window.location.reload()}\n\t\t\t\t\t\tclassName='btn btn-lg btn-info'\n\t\t\t\t\t>\n\t\t\t\t\t\tBack to Login\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<form onSubmit={loginHandler}>\n\t\t\t\t\t<h2 className='primary my-half'>Login</h2>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\tplaceholder='Enter email...'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\tplaceholder='Enter password...'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{loading && (\n\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{error && <Alert type='danger'>{error}</Alert>}\n\n\t\t\t\t\t<button type='submit' className='btn btn-lg btn-primary rounded'>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Link to='/signup'>\n\t\t\t\t\t\t\tNew to CherishRecipes?{' '}\n\t\t\t\t\t\t\t<strong className='primary'>Create account</strong>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t\t{!isForgotClicked && !forgotSuccess && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setIsForgotClicked(true)}\n\t\t\t\t\tclassName='btn btn-danger rounded'\n\t\t\t\t>\n\t\t\t\t\tForgot password?\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Login\n","/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/SkeletonRecipe.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/Skeleton.js",[],"/home/mehdi/Desktop/cherishrecipes/frontend/src/components/skeletons/Shimmer.js",[],["222","223"],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":25,"column":5,"nodeType":"230","endLine":25,"endColumn":53,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":53,"column":19,"nodeType":"234","messageId":"235","endLine":53,"endColumn":32},{"ruleId":"232","severity":1,"message":"236","line":53,"column":41,"nodeType":"234","messageId":"235","endLine":53,"endColumn":52},{"ruleId":"232","severity":1,"message":"237","line":65,"column":12,"nodeType":"234","messageId":"235","endLine":65,"endColumn":25},{"ruleId":"232","severity":1,"message":"238","line":66,"column":10,"nodeType":"234","messageId":"235","endLine":66,"endColumn":21},{"ruleId":"232","severity":1,"message":"239","line":109,"column":17,"nodeType":"234","messageId":"235","endLine":109,"endColumn":26},{"ruleId":"232","severity":1,"message":"240","line":109,"column":37,"nodeType":"234","messageId":"235","endLine":109,"endColumn":48},{"ruleId":"228","severity":1,"message":"241","line":142,"column":5,"nodeType":"230","endLine":142,"endColumn":62,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":230,"column":13,"nodeType":"245","endLine":235,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":190,"column":10,"nodeType":"248","endLine":190,"endColumn":32},{"ruleId":"232","severity":1,"message":"249","line":44,"column":9,"nodeType":"234","messageId":"235","endLine":44,"endColumn":18},{"ruleId":"232","severity":1,"message":"250","line":45,"column":9,"nodeType":"234","messageId":"235","endLine":45,"endColumn":18},{"ruleId":"228","severity":1,"message":"251","line":191,"column":5,"nodeType":"230","endLine":200,"endColumn":3,"suggestions":"252"},{"ruleId":"243","severity":1,"message":"244","line":216,"column":9,"nodeType":"245","endLine":220,"endColumn":11},{"ruleId":"246","severity":1,"message":"247","line":219,"column":10,"nodeType":"248","endLine":219,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":399,"column":19,"nodeType":"255","messageId":"256","endLine":399,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":418,"column":19,"nodeType":"255","messageId":"256","endLine":418,"endColumn":21},{"ruleId":"228","severity":1,"message":"257","line":22,"column":5,"nodeType":"230","endLine":22,"endColumn":24,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"240","line":27,"column":25,"nodeType":"234","messageId":"235","endLine":27,"endColumn":36},{"ruleId":"228","severity":1,"message":"259","line":37,"column":5,"nodeType":"230","endLine":37,"endColumn":21,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"261","line":1,"column":21,"nodeType":"234","messageId":"235","endLine":1,"endColumn":29},{"ruleId":"232","severity":1,"message":"262","line":14,"column":10,"nodeType":"234","messageId":"235","endLine":14,"endColumn":17},{"ruleId":"228","severity":1,"message":"263","line":27,"column":5,"nodeType":"230","endLine":27,"endColumn":15,"suggestions":"264"},{"ruleId":"246","severity":1,"message":"247","line":52,"column":12,"nodeType":"248","endLine":52,"endColumn":32},{"ruleId":"232","severity":1,"message":"265","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":14},{"ruleId":"232","severity":1,"message":"261","line":1,"column":21,"nodeType":"234","messageId":"235","endLine":1,"endColumn":29},{"ruleId":"228","severity":1,"message":"266","line":30,"column":5,"nodeType":"230","endLine":30,"endColumn":15,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":74,"column":10,"nodeType":"245","endLine":74,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":40,"column":5,"nodeType":"245","endLine":40,"endColumn":34},{"ruleId":"232","severity":1,"message":"270","line":72,"column":19,"nodeType":"234","messageId":"235","endLine":72,"endColumn":30},{"ruleId":"232","severity":1,"message":"271","line":91,"column":9,"nodeType":"234","messageId":"235","endLine":91,"endColumn":14},{"ruleId":"232","severity":1,"message":"272","line":96,"column":9,"nodeType":"234","messageId":"235","endLine":96,"endColumn":18},{"ruleId":"232","severity":1,"message":"273","line":114,"column":10,"nodeType":"234","messageId":"235","endLine":114,"endColumn":17},{"ruleId":"228","severity":1,"message":"274","line":41,"column":5,"nodeType":"230","endLine":41,"endColumn":24,"suggestions":"275"},{"ruleId":"228","severity":1,"message":"274","line":74,"column":5,"nodeType":"230","endLine":74,"endColumn":24,"suggestions":"276"},{"ruleId":"224","replacedBy":"277"},{"ruleId":"226","replacedBy":"278"},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipeId'. Either include it or remove the dependency array. Outer scope values like 'listRecipeDetails' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["281"],"no-unused-vars","'reviewLoading' is assigned a value but never used.","Identifier","unusedVar","'reviewError' is assigned a value but never used.","'updateLoading' is assigned a value but never used.","'updateError' is assigned a value but never used.","'userError' is assigned a value but never used.","'userLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.id', 'recipe', 'reviews', and 'user'. Either include them or remove the dependency array.",["282"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'uploading' is assigned a value but never used.","'uploadErr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'infoLoading', and 'success'. Either include them or remove the dependency array. Outer scope values like 'getUserDetails' aren't valid dependencies because mutating them doesn't re-render the component.",["283"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'confirmationToken' and 'history'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["285"],"'useState' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["286"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'recipes'. Either include it or remove the dependency array.",["287"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'infoLoading' is assigned a value but never used.","'files' is assigned a value but never used.","'uploaders' is assigned a value but never used.","'newData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["288"],["289"],["279"],["280"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},"Update the dependencies array to be: [dispatch, history, recipeId, userInfo]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch, success, deleteSuccess, review, updateSuccess, user, recipe, match.params.id, reviews]",{"range":"309","text":"310"},"Update the dependencies array to be: [dispatch, userInfo, user, deleteSuccess, active, deleteAccountSuccess, confirmEmailSuccess, infoLoading, history, success]",{"range":"311","text":"312"},"Update the dependencies array to be: [confirmationToken, dispatch, history, success]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, user, userInfo]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, user]",{"range":"317","text":"318"},"Update the dependencies array to be: [dispatch, recipes]",{"range":"319","text":"320"},"Update the dependencies array to be: [history, redirect, userInfo]",{"range":"321","text":"322"},{"range":"323","text":"322"},[795,843],"[dispatch, history, recipeId, userInfo]",[4302,4359],"[dispatch, success, deleteSuccess, review, updateSuccess, user, recipe, match.params.id, reviews]",[5314,5442],"[dispatch, userInfo, user, deleteSuccess, active, deleteAccountSuccess, confirmEmailSuccess, infoLoading, history, success]",[706,725],"[confirmationToken, dispatch, history, success]",[910,926],"[dispatch, user, userInfo]",[741,751],"[dispatch, user]",[918,928],"[dispatch, recipes]",[1156,1175],"[history, redirect, userInfo]",[1993,2012]]